Using TensorFlow backend.
2018-06-25 18:59:32.452583: I tensorflow/core/platform/cpu_feature_guard.cc:140] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2018-06-25 18:59:33.326953: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 0 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:05:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:33.775352: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 1 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:08:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:34.242764: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 2 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:0d:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:34.732221: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 3 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:13:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:35.238299: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 4 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:83:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:35.742134: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 5 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:89:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:36.273061: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 6 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:8e:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:36.807041: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1356] Found device 7 with properties: 
name: Tesla V100-PCIE-16GB major: 7 minor: 0 memoryClockRate(GHz): 1.38
pciBusID: 0000:91:00.0
totalMemory: 15.77GiB freeMemory: 15.36GiB
2018-06-25 18:59:36.834432: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1435] Adding visible gpu devices: 0, 1, 2, 3, 4, 5, 6, 7
2018-06-25 18:59:40.500067: I tensorflow/core/common_runtime/gpu/gpu_device.cc:923] Device interconnect StreamExecutor with strength 1 edge matrix:
2018-06-25 18:59:40.500119: I tensorflow/core/common_runtime/gpu/gpu_device.cc:929]      0 1 2 3 4 5 6 7 
2018-06-25 18:59:40.500130: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 0:   N Y Y Y N N N N 
2018-06-25 18:59:40.500138: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 1:   Y N Y Y N N N N 
2018-06-25 18:59:40.500145: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 2:   Y Y N Y N N N N 
2018-06-25 18:59:40.500152: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 3:   Y Y Y N N N N N 
2018-06-25 18:59:40.500159: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 4:   N N N N N Y Y Y 
2018-06-25 18:59:40.500166: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 5:   N N N N Y N Y Y 
2018-06-25 18:59:40.500174: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 6:   N N N N Y Y N Y 
2018-06-25 18:59:40.500181: I tensorflow/core/common_runtime/gpu/gpu_device.cc:942] 7:   N N N N Y Y Y N 
2018-06-25 18:59:40.504710: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 14867 MB memory) -> physical GPU (device: 0, name: Tesla V100-PCIE-16GB, pci bus id: 0000:05:00.0, compute capability: 7.0)
2018-06-25 18:59:40.684642: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:1 with 14867 MB memory) -> physical GPU (device: 1, name: Tesla V100-PCIE-16GB, pci bus id: 0000:08:00.0, compute capability: 7.0)
2018-06-25 18:59:40.868681: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:2 with 14867 MB memory) -> physical GPU (device: 2, name: Tesla V100-PCIE-16GB, pci bus id: 0000:0d:00.0, compute capability: 7.0)
2018-06-25 18:59:41.037351: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:3 with 14867 MB memory) -> physical GPU (device: 3, name: Tesla V100-PCIE-16GB, pci bus id: 0000:13:00.0, compute capability: 7.0)
2018-06-25 18:59:41.231098: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:4 with 14867 MB memory) -> physical GPU (device: 4, name: Tesla V100-PCIE-16GB, pci bus id: 0000:83:00.0, compute capability: 7.0)
2018-06-25 18:59:41.402934: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:5 with 14867 MB memory) -> physical GPU (device: 5, name: Tesla V100-PCIE-16GB, pci bus id: 0000:89:00.0, compute capability: 7.0)
2018-06-25 18:59:41.608146: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:6 with 14867 MB memory) -> physical GPU (device: 6, name: Tesla V100-PCIE-16GB, pci bus id: 0000:8e:00.0, compute capability: 7.0)
2018-06-25 18:59:41.791526: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1053] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:7 with 14867 MB memory) -> physical GPU (device: 7, name: Tesla V100-PCIE-16GB, pci bus id: 0000:91:00.0, compute capability: 7.0)
>>> Imports:
#coding=utf-8

from __future__ import print_function

try:
    import numpy
except:
    pass

try:
    from hyperopt import Trials, STATUS_OK, tpe
except:
    pass

try:
    from keras.datasets import mnist
except:
    pass

try:
    from keras.layers.core import Dense, Dropout, Activation
except:
    pass

try:
    from keras.models import Sequential
except:
    pass

try:
    from keras.utils import np_utils
except:
    pass

try:
    from keras.utils import to_categorical
except:
    pass

try:
    from hyperas import optim
except:
    pass

try:
    from hyperas.distributions import choice, uniform
except:
    pass

try:
    from sklearn.model_selection import train_test_split
except:
    pass

try:
    from macros_AWS import scale_x
except:
    pass

>>> Hyperas search space:

def get_space():
    return {
        'Dense': hp.choice('Dense', [100, 150, 50, 6]),
        'Dropout': hp.uniform('Dropout', 0, 1),
        'Dense_1': hp.choice('Dense_1', [100,150,50,6]),
        'Activation': hp.choice('Activation', ['relu', 'sigmoid']),
        'Dropout_1': hp.uniform('Dropout_1', 0, 1),
        'Dropout_2': hp.choice('Dropout_2', ['three', 'four']),
        'add': hp.choice('add', [Dropout(.5)]),
        'Activation_1': hp.choice('Activation_1', ['softmax','sigmoid']),
        'optimizer': hp.choice('optimizer', ['rmsprop','adam','sgd']),
        'batch_size': hp.choice('batch_size', range(50,200,10)),
        'epochs': hp.choice('epochs', range(1,50)),
    }

>>> Data
   1: 
   2: """
   3: Data providing function:
   4: 
   5: This function is separated from create_model() so that hyperopt
   6: won't reload data for each evaluation run.
   7: """
   8: #(x_train, y_train), (x_test, y_test) = mnist.load_data()
   9: #x_train = x_train.reshape(60000, 784)
  10: #x_test = x_test.reshape(10000, 784)
  11: #x_train = x_train.astype('float32')
  12: #x_test = x_test.astype('float32')
  13: #x_train /= 255
  14: #x_test /= 255
  15: #nb_classes = 10
  16: #y_train = np_utils.to_categorical(y_train, nb_classes)
  17: #y_test = np_utils.to_categorical(y_test, nb_classes)
  18: from sklearn.model_selection import train_test_split
  19: from macros_AWS import scale_x
  20: data_directory = '/home/rice/jmc32/Gridsearch_Data/'
  21: data_sample = 'PtRegression_for_DNN_Vars_MODE_15_noBitCompr_RPC_1m_redo.npy'
  22: scaler = 'maxabs'
  23: totalset = numpy.load(data_directory + data_sample)
  24: dataset, testset = train_test_split(totalset, test_size = 0.1)
  25: # Split into input (X) and output (Y) variables
  26: x_train_prescale = dataset[:,1:]
  27: y_train = dataset[:,0]
  28: x_test_prescale = testset[:,1:]
  29: y_test = testset[:,0]
  30: # Scale
  31: print(y_train.shape)
  32: print(y_test.shape)
  33: #print(numpy.matrix(y_train))
  34: x_train, x_test = scale_x(x_train_prescale, x_test_prescale, scaler)
  35: print(x_train.shape)
  36: print(x_test.shape)
  37: #y_train= to_categorical(y_train)
  38: #y_test= to_categorical(y_test)
  39: #x_train= to_categorical(x_train)
  40: #x_test= to_categorical(x_test)
  41: 
  42: 
  43: 
>>> Resulting replaced keras model:

   1: def keras_fmin_fnct(space):
   2: 
   3:     """
   4:     Model providing function:
   5: 
   6:     Create Keras model with double curly brackets dropped-in as needed.
   7:     Return value has to be a valid python dictionary with two customary keys:
   8:         - loss: Specify a numeric evaluation metric to be minimized
   9:         - status: Just use STATUS_OK and see hyperopt documentation if not feasible
  10:     The last one is optional, though recommended, namely:
  11:         - model: specify the model just created so that we can later use it again.
  12:     """
  13:     model = Sequential()
  14:     model.add(Dense(space['Dense'], input_dim=7))
  15:     model.add(Activation('relu'))
  16:     model.add(Dropout(space['Dropout']))    
  17:     model.add(Dense(space['Dense_1']))
  18:     model.add(Activation(space['Activation']))
  19:     model.add(Dropout(space['Dropout_1']))
  20: 
  21:     # If we choose 'four', add an additional fourth layer
  22:     if space['Dropout_2'] == 'four':
  23:         model.add(Dense(100))
  24: 
  25:         # We can also choose between complete sets of layers
  26: 
  27:         model.add(space['add'])
  28:         model.add(Activation('relu'))
  29: 
  30:     model.add(Dense(1))
  31:     model.add(Activation(space['Activation_1']))
  32: 
  33:     model.compile(loss='sparse_categorical_crossentropy', metrics=['accuracy'],
  34:                   optimizer=space['optimizer'])
  35: 
  36:     model.fit(x_train, y_train,
  37:               batch_size=space['batch_size'],
  38:               epochs=space['epochs'],
  39:               verbose=2,
  40:               validation_data=(x_test, y_test))
  41:     score, acc = model.evaluate(x_test, y_test, verbose=0)
  42:     print('Test accuracy:', acc)
  43:     return {'loss': -acc, 'status': STATUS_OK, 'model': model}
  44: 
(900000,)
(100000,)
MaxAbs

(900000, 7)
(100000, 7)
Train on 900000 samples, validate on 100000 samples
Epoch 1/2
 - 60s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 2/2
 - 46s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Test accuracy: 0.56483
Train on 900000 samples, validate on 100000 samples
Epoch 1/39
 - 18s - loss: nan - acc: 7.5556e-05 - val_loss: nan - val_acc: 0.0000e+00
Epoch 2/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 3/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 4/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 5/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 6/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 7/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 8/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 9/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 10/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 11/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 12/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 13/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 14/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 15/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 16/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 17/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 18/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 19/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 20/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 21/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 22/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 23/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 24/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 25/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 26/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 27/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 28/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 29/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 30/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 31/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 32/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 33/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 34/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 35/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 36/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 37/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 38/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 39/39
 - 18s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Test accuracy: 0.0
Train on 900000 samples, validate on 100000 samples
Epoch 1/35
 - 15s - loss: nan - acc: 1.0556e-04 - val_loss: nan - val_acc: 0.0000e+00
Epoch 2/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 3/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 4/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 5/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 6/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 7/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 8/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 9/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 10/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 11/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 12/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 13/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 14/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 15/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 16/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 17/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 18/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 19/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 20/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 21/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 22/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 23/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 24/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 25/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 26/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 27/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 28/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 29/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 30/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 31/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 32/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 33/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 34/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Epoch 35/35
 - 15s - loss: nan - acc: 0.0000e+00 - val_loss: nan - val_acc: 0.0000e+00
Test accuracy: 0.0
Train on 900000 samples, validate on 100000 samples
Epoch 1/46
 - 33s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 2/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 3/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 4/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 5/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 6/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 7/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 8/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 9/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 10/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 11/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 12/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 13/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 14/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 15/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 16/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 17/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 18/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 19/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 20/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 21/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 22/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 23/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 24/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 25/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 26/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 27/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 28/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 29/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 30/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 31/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 32/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 33/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 34/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 35/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 36/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 37/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 38/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 39/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 40/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 41/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 42/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 43/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 44/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 45/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 46/46
 - 32s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Test accuracy: 0.56483
Train on 900000 samples, validate on 100000 samples
Epoch 1/28
 - 27s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 2/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 3/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 4/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 5/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 6/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 7/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 8/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 9/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 10/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 11/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 12/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 13/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 14/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 15/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 16/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 17/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 18/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 19/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 20/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 21/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 22/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 23/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 24/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 25/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 26/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 27/28
 - 27s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Epoch 28/28
 - 26s - loss: nan - acc: 0.5642 - val_loss: nan - val_acc: 0.5648
Test accuracy: 0.56483
(900000,)
(100000,)
MaxAbs

(900000, 7)
(100000, 7)
Evalutation of best performing model:

    32/100000 [..............................] - ETA: 10s
  1024/100000 [..............................] - ETA: 5s 
  2016/100000 [..............................] - ETA: 5s
  3072/100000 [..............................] - ETA: 4s
  4224/100000 [>.............................] - ETA: 4s
  5504/100000 [>.............................] - ETA: 4s
  6816/100000 [=>............................] - ETA: 4s
  8128/100000 [=>............................] - ETA: 4s
  9408/100000 [=>............................] - ETA: 3s
 10688/100000 [==>...........................] - ETA: 3s
 12000/100000 [==>...........................] - ETA: 3s
 13344/100000 [===>..........................] - ETA: 3s
 14656/100000 [===>..........................] - ETA: 3s
 16000/100000 [===>..........................] - ETA: 3s
 17344/100000 [====>.........................] - ETA: 3s
 18656/100000 [====>.........................] - ETA: 3s
 19936/100000 [====>.........................] - ETA: 3s
 21216/100000 [=====>........................] - ETA: 3s
 22496/100000 [=====>........................] - ETA: 3s
 23776/100000 [======>.......................] - ETA: 3s
 25056/100000 [======>.......................] - ETA: 3s
 26336/100000 [======>.......................] - ETA: 2s
 27616/100000 [=======>......................] - ETA: 2s
 28896/100000 [=======>......................] - ETA: 2s
 30176/100000 [========>.....................] - ETA: 2s
 31488/100000 [========>.....................] - ETA: 2s
 32736/100000 [========>.....................] - ETA: 2s
 34016/100000 [=========>....................] - ETA: 2s
 35264/100000 [=========>....................] - ETA: 2s
 36480/100000 [=========>....................] - ETA: 2s
 37792/100000 [==========>...................] - ETA: 2s
 39072/100000 [==========>...................] - ETA: 2s
 40320/100000 [===========>..................] - ETA: 2s
 41408/100000 [===========>..................] - ETA: 2s
 42624/100000 [===========>..................] - ETA: 2s
 43840/100000 [============>.................] - ETA: 2s
 45088/100000 [============>.................] - ETA: 2s
 46336/100000 [============>.................] - ETA: 2s
 47616/100000 [=============>................] - ETA: 2s
 48896/100000 [=============>................] - ETA: 2s
 50144/100000 [==============>...............] - ETA: 2s
 51392/100000 [==============>...............] - ETA: 1s
 52704/100000 [==============>...............] - ETA: 1s
 54016/100000 [===============>..............] - ETA: 1s
 55328/100000 [===============>..............] - ETA: 1s
 56640/100000 [===============>..............] - ETA: 1s
 57952/100000 [================>.............] - ETA: 1s
 59296/100000 [================>.............] - ETA: 1s
 60608/100000 [=================>............] - ETA: 1s
 61952/100000 [=================>............] - ETA: 1s
 63264/100000 [=================>............] - ETA: 1s
 64608/100000 [==================>...........] - ETA: 1s
 65984/100000 [==================>...........] - ETA: 1s
 67296/100000 [===================>..........] - ETA: 1s
 68608/100000 [===================>..........] - ETA: 1s
 69984/100000 [===================>..........] - ETA: 1s
 71360/100000 [====================>.........] - ETA: 1s
 72736/100000 [====================>.........] - ETA: 1s
 74080/100000 [=====================>........] - ETA: 1s
 75424/100000 [=====================>........] - ETA: 0s
 76736/100000 [======================>.......] - ETA: 0s
 78016/100000 [======================>.......] - ETA: 0s
 79328/100000 [======================>.......] - ETA: 0s
 80640/100000 [=======================>......] - ETA: 0s
 81952/100000 [=======================>......] - ETA: 0s
 83264/100000 [=======================>......] - ETA: 0s
 84576/100000 [========================>.....] - ETA: 0s
 85920/100000 [========================>.....] - ETA: 0s
 87200/100000 [=========================>....] - ETA: 0s
 88480/100000 [=========================>....] - ETA: 0s
 89824/100000 [=========================>....] - ETA: 0s
 91104/100000 [==========================>...] - ETA: 0s
 92384/100000 [==========================>...] - ETA: 0s
 93632/100000 [===========================>..] - ETA: 0s
 94912/100000 [===========================>..] - ETA: 0s
 96192/100000 [===========================>..] - ETA: 0s
 97472/100000 [============================>.] - ETA: 0s
 98752/100000 [============================>.] - ETA: 0s
100000/100000 [==============================] - 4s 39us/step
['nan', '0.56171']
Best performing model chosen hyper-parameters:
{'Activation_1': 0, 'epochs': 1, 'Dense_1': 2, 'Dense': 2, 'Activation': 1, 'batch_size': 0, 'Dropout_1': 0.7371698374615214, 'add': 0, 'Dropout_2': 0, 'optimizer': 2, 'Dropout': 0.6108763092812357}
